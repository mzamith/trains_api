-- MySQL Script generated by MySQL Workbench
-- Sat Oct 22 18:56:31 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema trains
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema trains
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `trains` DEFAULT CHARACTER SET utf8 ;
USE `trains` ;

-- -----------------------------------------------------
-- Table `trains`.`configuration`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `trains`.`configuration` ;

CREATE TABLE IF NOT EXISTS `trains`.`configuration` (
  `id` 	BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `conf_key` VARCHAR(100) NOT NULL,
  `conf_value` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `key_UNIQUE` (`conf_key` ASC));

-- -----------------------------------------------------
-- Table `trains`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `trains`.`account` ;

CREATE TABLE IF NOT EXISTS `trains`.`account` (
  `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `reference_id` VARCHAR(255) NOT NULL,
  `username` VARCHAR(100) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `enabled` BIT(1) NOT NULL DEFAULT b'1',
  `credentialsexpired` BIT(1) NOT NULL DEFAULT b'0',
  `expired` BIT(1) NOT NULL DEFAULT b'0',
  `locked` BIT(1) NOT NULL DEFAULT b'0',
  `card_number` VARCHAR(100) NULL DEFAULT NULL,
  `card_date` DATETIME NULL DEFAULT NULL,
  `version` INT(10) UNSIGNED NOT NULL,
  `created_by` VARCHAR(100) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_by` VARCHAR(100) NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UQ_Account_ReferenceId` (`reference_id` ASC),
  UNIQUE INDEX `UQ_Account_Username` (`username` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `trains`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `trains`.`role` ;

CREATE TABLE IF NOT EXISTS `trains`.`role` (
  `id` BIGINT(20) UNSIGNED NOT NULL,
  `code` VARCHAR(50) NOT NULL,
  `label` VARCHAR(100) NOT NULL,
  `ordinal` INT(10) UNSIGNED NOT NULL,
  `effective_at` DATETIME NOT NULL,
  `expires_at` DATETIME NULL DEFAULT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UQ_Role_Code` (`code` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `trains`.`account_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `trains`.`account_role` ;

CREATE TABLE IF NOT EXISTS `trains`.`account_role` (
  `account_id` BIGINT(20) UNSIGNED NOT NULL,
  `role_id` BIGINT(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`account_id`, `role_id`),
  INDEX `FK_account_role_role_id` (`role_id` ASC),
  CONSTRAINT `FK_account_role_Account_Id`
    FOREIGN KEY (`account_id`)
    REFERENCES `trains`.`account` (`id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_account_role_Role_Id`
    FOREIGN KEY (`role_id`)
    REFERENCES `trains`.`role` (`id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `trains`.`station`
-- -----------------------------------------------------
drop table if exists `trains`.`station`;

create table `trains`.`station` (
    `id` bigint(20) unsigned not null auto_increment,
	`code` varchar(50) not null,
	`label` varchar(100) not null,
	`ordinal` int(10) unsigned not null,
	`effective_at` datetime not null,
	`expires_at` datetime null default null,
	`created_at` datetime not null,
    primary key (`id`),
    unique index `code_unique` (`code` asc));


-- -----------------------------------------------------
-- Table `trains`.`line`
-- -----------------------------------------------------
drop table if exists `trains`.`line`;

create table `trains`.`line` (
    `id` bigint(20) unsigned not null auto_increment,
	`code` varchar(50) not null,
	`label` varchar(100) not null,
	`ordinal` int(10) unsigned not null,
	`effective_at` datetime not null,
	`expires_at` datetime null default null,
	`created_at` datetime not null,
    primary key (`id`),
    unique index `code_unique` (`code` asc));


-- -----------------------------------------------------
-- Table `trains`.`train`
-- -----------------------------------------------------
drop table if exists `trains`.`train`;

create table `trains`.`train` (
	`id` bigint(20) unsigned not null auto_increment,
	`code` varchar(50) not null,
	`label` varchar(100) not null default 'comboio regular',
	`ordinal` int(10) unsigned not null,
	`effective_at` datetime not null,
	`expires_at` datetime null default null,
	`created_at` datetime not null,
    `capacity` int unsigned not null,
    primary key (`id`),
    unique index `code_unique` (`code` asc));


-- -----------------------------------------------------
-- Table `trains`.`trip`
-- -----------------------------------------------------
drop table if exists `trains`.`trip`;

create table `trains`.`trip` (
	`id` bigint(20) unsigned not null auto_increment,
	`code` varchar(50) not null,
	`label` varchar(100) not null,
	`ordinal` int(10) unsigned not null,
	`effective_at` datetime not null,
	`expires_at` datetime null default null,
	`created_at` datetime not null,
	`from` bigint(20) unsigned not null,
	`to` bigint(20) unsigned not null,
	`line` bigint(20) unsigned not null,
	`duration` int unsigned not null,
	`distance` int unsigned not null,
	primary key (`id`),
	unique index `unique_line_from_to` (`line` asc, `from` asc, `to` asc),
	index `trip_from_fk_idx` (`from` asc),
	index `trip_to_fk_idx` (`to` asc),
	constraint `trip_line_fk`
    foreign key (`line`)
    references `trains`.`line` (`id`)
    on delete restrict
    on update cascade,
	constraint `trip_from_fk`
		foreign key (`from`)
		references `trains`.`station` (`id`)
		on delete restrict
		on update cascade,
	constraint `trip_to_fk`
		foreign key (`to`)
		references `trains`.`station` (`id`)
		on delete restrict
		on update cascade);


-- -----------------------------------------------------
-- Table `trains`.`departure`
-- -----------------------------------------------------
drop table if exists `trains`.`departure`;

create table `trains`.`departure` (
    `id` bigint(20) unsigned not null auto_increment,
	`code` varchar(50) not null,
	`label` varchar(100) not null,
	`ordinal` int(10) unsigned not null,
	`effective_at` datetime not null,
	`expires_at` datetime null default null,
	`created_at` datetime not null,
    `from` bigint(20) unsigned not null,
    `time` datetime not null,
    `line` bigint(20) unsigned not null,
    `train` bigint(20) unsigned not null,
    primary key (`id`),
    index `departure_from_fk_idx` (`from` asc),
    index `departure_train_fk_idx` (`train` asc),
    index `departure_line_fk_idx` (`line` asc),
    constraint `departure_from_fk`
        foreign key (`from`)
        references `trains`.`station` (`id`)
        on delete restrict
        on update cascade,
    constraint `departure_train_fk`
        foreign key (`train`)
        references `trains`.`train` (`id`)
        on delete restrict
        on update cascade,
    constraint `departure_line_fk`
        foreign key (`line`)
        references `trains`.`line` (`id`)
        on delete restrict
        on update cascade,
	unique index `code_unique` (`code` asc));


-- -----------------------------------------------------
-- Table `trains`.`ticket`
-- -----------------------------------------------------
drop table if exists `trains`.`ticket`;

create table `trains`.`ticket` (
	`id` bigint(20) unsigned not null auto_increment,
	`code` varchar(50) not null,
	`label` varchar(100) not null,
	`ordinal` int(10) unsigned not null,
	`effective_at` datetime not null,
	`expires_at` datetime null default null,
	`created_at` datetime not null,
	`account_id` bigint(20) unsigned not null,
	`departure` bigint(20) unsigned not null,
	`to_station` bigint(20) unsigned not null,
	`price` decimal(6,2) unsigned not null,
	`state` varchar(50) not null,
	primary key (`id`),
	index `ticket_departure_idx` (`departure` asc),
	index `ticket_to_idx` (`to_station` asc),
    constraint `ticket_user_fk`
            foreign key (`account_id`)
            references `trains`.`account` (`id`)
            on delete restrict
            on update cascade,
	constraint `ticket_departure_fk`
		foreign key (`departure`)
		references `trains`.`departure` (`id`)
		on delete restrict
		on update cascade,
	constraint `ticket_to_fk`
		foreign key (`to_station`)
		references `trains`.`station` (`id`)
		on delete restrict
		on update cascade,
	unique index `code_unique` (`code` asc));

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
